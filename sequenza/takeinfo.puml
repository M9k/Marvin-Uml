@startuml

box "React" #Pink
participant Virtual_DOM
participant TeacherExams
end box

box "Redux" #Plum
participant TeacherExam
participant Store
participant TeacherExamsSaga
end box

box "Web3" #LightGreen
participant Teacher
end box

[o-> TeacherExams: "Manage Exams"
note left: A teacher clicks "Manage Exams"\non his home page
activate TeacherExams
activate Store

TeacherExams ->> Store: dispatch(getListAction())
Store ->> TeacherExamsSaga: handler(getListAction())
activate TeacherExamsSaga
TeacherExamsSaga ->> Store: dispatch(listIsLoading())
Store -> TeacherExam: reducer(state, listIsLoading())
activate TeacherExam
TeacherExam --> Store: object
deactivate TeacherExam
Store ->> TeacherExams: update()
TeacherExams -> TeacherExams: render()
TeacherExams --> Virtual_DOM: update
note left: Show a loading component
TeacherExamsSaga -> Teacher: getExamNumber(address)
activate Teacher
Teacher --> TeacherExamsSaga: number
loop for each exam held by the teacher
  TeacherExamsSaga ->> Teacher: getExamContractAt(address, i)
  Teacher --> TeacherExamsSaga: object
end
deactivate Teacher
alt all exams fetched without errors
    TeacherExamsSaga ->> Store: dispatch(setExamsList(object))
    Store -> TeacherExam : reducer(state, setExamsList())
    activate TeacherExam
    TeacherExam --> Store: object
    deactivate TeacherExam

else at least one exam fetched with errors
    TeacherExamsSaga ->> Store : dispatch(listHasErrored())
    Store -> TeacherExam : reducer(state, ListHasErrored())
    activate TeacherExam
    TeacherExam --> Store: object
    deactivate TeacherExam

end
deactivate TeacherExamsSaga
Store ->> TeacherExams: update()
TeacherExams -> TeacherExams: render()
TeacherExams --> Virtual_DOM: update
note left: Show the list or the error message


deactivate TeacherExams


@enduml
